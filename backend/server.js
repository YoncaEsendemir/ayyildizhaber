const express = require("express")
const cors = require("cors")
const cron = require("node-cron")
const weatherRoutes = require("./src/routes/weatherRoutes")
const prayerTimesRoutes = require("./src/routes/prayerTimesRoutes")
const newsRoutes = require("./src/routes/newsRoutes")
const newsRoutes2 = require("./src/routes/newsRoute2")
const currencyRoutes = require("./src/routes/currencyRoute")
const currencyService = require("./src/services/fetchCurrencyData")

const app = express()
const PORT = 5000

app.use(cors())
app.use(express.json())

// API rotalarÄ±
app.use("/api/weather", weatherRoutes)
app.use("/api/prayer-times", prayerTimesRoutes)
app.use("/api/news", newsRoutes)
app.use("/api/news2", newsRoutes2)
app.use("/api/currency", currencyRoutes)

// Her 30 dakikada bir dÃ¶viz verilerini gÃ¼ncelle
cron.schedule("*/30 * * * *", async () => {
  try {
    console.log("DÃ¶viz verileri gÃ¼ncelleniyor...")
    await currencyService.fetchCurrencyMoneyData()
    await currencyService.fetchCurrencyGoldData()
    await currencyService.fetchCurrencyCryptoData()
    console.log("DÃ¶viz verileri gÃ¼ncellendi")
  } catch (error) {
    console.error("ZamanlanmÄ±ÅŸ dÃ¶viz gÃ¼ncelleme hatasÄ±:", error)
  }
})

// Uygulama baÅŸladÄ±ÄŸÄ±nda ilk dÃ¶viz verilerini al
app.on("ready", async () => {
  try {
    console.log("Ä°lk dÃ¶viz verileri alÄ±nÄ±yor...")
    await currencyService.fetchCurrencyMoneyData()
    await currencyService.fetchCurrencyGoldData()
    await currencyService.fetchCurrencyCryptoData()
    console.log("Ä°lk dÃ¶viz verileri alÄ±ndÄ±")
  } catch (error) {
    console.error("Ä°lk dÃ¶viz verileri alÄ±nÄ±rken hata:", error)
  }
})

// Global hata yakalama
app.use((err, req, res, next) => {
  console.error(err.stack)
  res.status(500).json({ error: "Bir hata oluÅŸtu" })
})

const server = app.listen(PORT, () => {
  console.log(`ğŸš€ Server ${PORT} portunda Ã§alÄ±ÅŸÄ±yor`)
  app.emit("ready")
})

// Graceful shutdown
process.on("SIGTERM", () => {
  console.log("SIGTERM sinyali alÄ±ndÄ±, sunucu kapatÄ±lÄ±yor")
  server.close(() => {
    console.log("Sunucu kapatÄ±ldÄ±")
    process.exit(0)
  })
})
